<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
	<resultMap type="dto.BoardDTO" id="fb_board">
		<result column="member_no" property="member_no"/>
		<result column="board_no" property="board_no"/>
		<result column="board_readcount" property="board_readcount"/>
		<result column="board_writer" property="board_writer"/>
		<result column="board_content" property="board_content"/>
		<result column="board_reg_date" property="board_reg_date"/>
		<result column="board_subject" property="board_subject"/>
		<result column="boardcategory_no" property="boardcategory_no"/>
		<collection property="bdto" javaType="java.util.List" ofType="dto.CommentDTO" >
			<result column="comment_no" property="comment_no"/>
			<result column="board_no" property="board_no"/>
			<result column="photo_no" property="photo_no"/>
			<result column="qa_no" property="qa_no"/>
			<result column="comment_content" property="comment_content"/>
			<result column="comment_writer" property="comment_writer"/>
			<result column="comment_date" property="comment_date"/>
		</collection>
	</resultMap>
	
	<resultMap type="dto.QA_BoardDTO" id="qa_board">
		<result column="member_no" property="member_no"/>
		<result column="qa_no" property="qa_no"/>
		<result column="qa_readcount" property="qa_readcount"/>
		<result column="qa_writer" property="qa_writer"/>
		<result column="qa_content" property="qa_content"/>
		<result column="qa_reg_date" property="qa_reg_date"/>
		<result column="qa_subject" property="qa_subject"/>
		<collection property="qdto" javaType="java.util.List" ofType="dto.CommentDTO" >
			<result column="comment_no" property="comment_no"/>
			<result column="board_no" property="board_no"/>
			<result column="photo_no" property="photo_no"/>
			<result column="qa_no" property="qa_no"/>
			<result column="comment_content" property="comment_content"/>
			<result column="comment_writer" property="comment_writer"/>
			<result column="comment_date" property="comment_date"/>
		</collection>
	</resultMap>
	
	<resultMap type="dto.Photo_BoardDTO" id="photo_board">
		<result column="member_no" property="member_no"/>
		<result column="photo_no" property="photo_no"/>
		<result column="photo_readcount" property="photo_readcount"/>
		<result column="photo_writer" property="photo_writer"/>
		<result column="photo_content" property="photo_content"/>
		<result column="photo_reg_date" property="photo_reg_date"/>
		<result column="photo_subject" property="photo_subject"/>
		<collection property="pdto" javaType="java.util.List" ofType="dto.CommentDTO" >
			<result column="comment_no" property="comment_no"/>
			<result column="board_no" property="board_no"/>
			<result column="photo_no" property="photo_no"/>
			<result column="qa_no" property="qa_no"/>
			<result column="comment_content" property="comment_content"/>
			<result column="comment_writer" property="comment_writer"/>
			<result column="comment_date" property="comment_date"/>
		</collection>
	</resultMap>

	
	<!-- [자유게시판] -->
	<select id="count" resultType="int" parameterType="dto.BoardDTO">
		select count(*) from fb_board
	</select>
	
	<select id="list" resultType="dto.BoardDTO" parameterType="int">
		select * from fb_board where board_no = #{board_no} 
	</select>
	
	<select id="contentList" parameterType="int" resultMap="fb_board" >
		select b.*, c.* from fb_board b, fb_comment c 
		where b.board_no = c.comment_no(+) 
		and b.board_no = #{board_no} order by c.comment_no desc
	</select>

	<select id="pageList" resultType="dto.BoardDTO" parameterType="map">
		<![CDATA[
		select b.* from (
		select rownum as rm, a.* from (
		select * from fb_board order by board_no desc)a)b 
		where b.rm>=#{startRow} and b.rm <=#{endRow}
 		]]>
	</select>
	
	<select id="commentPageList" resultType="dto.CommentDTO" parameterType="hashmap">
		<![CDATA[
		select b.* from (
		select rownum as rm, a.* from (
		select * from fb_comment where board_no = #{board_no} order by comment_no desc)a)b 
		where b.rm>=#{startRow} and b.rm <=#{endRow}
 		]]>
	</select>
	
	<select id="commentCount" parameterType="int" resultType="int">
		select count(*) from fb_comment where board_no = #{board_no}
	</select>
	
	<insert id="commentSave" parameterType="hashmap">
		insert into fb_comment values (SEQ_comment_no.nextval, #{board_no}, 0, 0, #{comment_content}, #{comment_writer}, sysdate, 1)
	</insert>
	
	<delete id="commentDelete" parameterType="hashmap">
		delete from fb_comment where comment_no = #{comment_no} and member_no = #{member_no}
	</delete>

	<update id="commentUpdate" parameterType="hashmap">
		update fb_comment set comment_content = #{comment_content} where comment_no = #{comment_no} and member_no = #{member_no}
	</update>

	<update id="readCount" parameterType="int">
		update fb_board set
		board_readcount=board_readcount+1 where
		board_no=#{board_no}
	</update>
	
	<insert id="save" parameterType="dto.BoardDTO">
		insert into fb_board(boardcategory_no, member_no, board_no, board_readcount, board_writer, board_content, board_reg_date, board_subject)  
		values(1, 1,SEQ_board_no.nextval,0,#{board_writer}, #{board_content}, sysdate, #{board_subject})
	</insert>

	<update id="update" parameterType="dto.BoardDTO">
		update fb_board set board_subject=#{board_subject}, board_content=#{board_content}
		where board_no=#{board_no} 
	</update>

	<delete id="delete" parameterType="int">
		delete from fb_board where
		board_no=#{board_no}
	</delete>

	<!-- [QA게시판] -->
	<select id="qa_count" resultType="int">
		select count(*) from fb_qa_board
	</select>

	<select id="qa_list" resultType="dto.QA_BoardDTO" parameterType="dto.PageDTO">
		<!-- 파싱하지말고 문자열 그대로 사용하라(<,>) '<'를 사용하기 위해서 CDATA를 사용 아직 수정중  -->
		<![CDATA[ 
			select b.* from (select rownum as rm, a.* from (select * from fb_qa_board order by qa_no desc)a)b 
			where b.rm>=#{startRow} and b.rm <=#{endRow}
			]]>
			
	</select>

	<select id="qa_content" parameterType="int" resultType="dto.QA_BoardDTO">
		select *
		from fb_qa_board where qa_no=#{qa_no}
	</select>

	<update id="qa_readCount" parameterType="int">
		update fb_qa_board set
		qa_readcount=qa_readcount+1 where qa_no=#{qa_no}
	</update>

	<update id="qa_reStepCount" parameterType="dto.QA_BoardDTO">
		<!-- 아직 수정중 <![CDATA[ update fb_qa_board set re_step=re_step+1 where ref=#{ref} 
			and re_step>#{re_step} ]]> -->
	</update>
	
	<insert id="qa_save" parameterType="dto.QA_BoardDTO">
		insert into fb_qa_board(member_no ,qa_no, qa_readcount, qa_writer, qa_content, qa_reg_date, qa_subject, qa_upload)  
		values(1,SEQ_qa_no.nextval,0,#{qa_writer}, #{qa_content}, sysdate, #{qa_subject}, #{qa_upload,jdbcType=VARCHAR})
		
		<!-- <choose>
			<when test="comment_ref==0">
				SEQ_qa_no.nextval
			</when>
			<otherwise>
				#{comment_ref}
			</otherwise>
		</choose>
		,#{comment_re_step}, #{comment_re_level},#{upload,jdbcType=VARCHAR}) -->
	</insert>

	<select id="qa_uploadFile" parameterType="int" resultType="String">
		select qa_upload from fb_qa_board where qa_no = #{qa_no}
	</select>

	<update id="qa_update" parameterType="dto.QA_BoardDTO">
		update fb_qa_board set qa_subject=#{qa_subject}, qa_content=#{qa_content}
		<if test="qa_upload!=null">
			,qa_upload=#{qa_upload}
		</if>
		where qa_no=#{qa_no}
	</update>

	<delete id="qa_delete" parameterType="int">
		delete from fb_qa_board
		where qa_no=#{qa_no}
	</delete>
	
	
	<!-- [Photo게시판] -->
	<select id="photo_count" resultType="int">
		select count(*) from fb_photo_board
	</select>

	<select id="photo_list" resultType="dto.Photo_BoardDTO" parameterType="dto.PageDTO">
		<!-- 파싱하지말고 문자열 그대로 사용하라(<,>) '<'를 사용하기 위해서 CDATA를 사용 아직 수정중  -->
		<![CDATA[ 
			select b.* from (select rownum as rm, a.* from (select * from fb_photo_board order by photo_no desc)a)b 
			where b.rm>=#{startRow} and b.rm <=#{endRow}
			]]>			
	</select>

	<select id="photo_content" parameterType="int" resultType="dto.Photo_BoardDTO">
		select *
		from fb_photo_board where photo_no=#{photo_no}
	</select>

	<update id="photo_readCount" parameterType="int">
		update fb_photo_board set
		photo_readcount=photo_readcount+1 where photo_no=#{photo_no}
	</update>

	<update id="photo_reStepCount" parameterType="dto.Photo_BoardDTO">
		<!-- 아직 수정중 <![CDATA[ update fb_qa_board set re_step=re_step+1 where ref=#{ref} 
			and re_step>#{re_step} ]]> -->
	</update>
	
	<insert id="p_save" parameterType="dto.Photo_BoardDTO">
		insert into fb_photo_board(member_no, photo_no, photo_readcount, photo_writer, photo_content, photo_reg_date, photo_subject, photo_upload)  
		values(1, SEQ_photo_no.nextval,0,#{photo_writer}, #{photo_content}, sysdate, #{photo_subject}, #{photo_upload,jdbcType=VARCHAR})
		<!-- <choose>
			<when test="comment_ref==0">
				SEQ_qa_no.nextval
			</when>
			<otherwise>
				#{comment_ref}
			</otherwise>
		</choose>
		,#{comment_re_step}, #{comment_re_level},#{upload,jdbcType=VARCHAR}) -->
	</insert>

	<select id="photo_uploadFile" parameterType="int" resultType="String">
		select photo_upload from fb_photo_board where photo_no = #{photo_no}
	</select>

	<update id="photo_update" parameterType="dto.Photo_BoardDTO">
		update fb_photo_board set photo_subject=#{photo_subject},
		photo_content=#{photo_content}
		<if test="photo_upload!=null">
			,photo_upload=#{photo_upload}
		</if>
		where photo_no=#{photo_no}
	</update>

	<delete id="photo_delete" parameterType="int">
		delete from fb_photo_board
		where photo_no=#{photo_no}
	</delete>
</mapper>